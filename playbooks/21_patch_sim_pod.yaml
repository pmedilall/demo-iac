---
- hosts: localhost
  gather_facts: false
  collections: [kubernetes.core]
  vars:
    ns: "{{ target_ns | default('demo-dev') }}"
    sim_pod: patch-sim
    package: openssl             # change to demo any package
  tasks:
    - name: Create UBI test pod
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Pod
          metadata: { name: "{{ sim_pod }}", namespace: "{{ ns }}" }
          spec:
            restartPolicy: Never
            containers:
              - name: ubi
                image: registry.access.redhat.com/ubi9/ubi
                command: ["sleep","3600"]

    - name: Wait for pod Ready
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Pod
        name: "{{ sim_pod }}"
        namespace: "{{ ns }}"
      register: podinfo
      until: podinfo.resources | length > 0 and (podinfo.resources[0].status.containerStatuses[0].ready | default(false))
      retries: 30
      delay: 2

    - name: Show {{ package }} version (before)
      kubernetes.core.k8s_exec:
        namespace: "{{ ns }}"
        pod: "{{ sim_pod }}"
        command: ["bash","-lc","rpm -q {{ package }} || true"]
      register: rpm_before

    - name: Update {{ package }} (simulate remediation)
      kubernetes.core.k8s_exec:
        namespace: "{{ ns }}"
        pod: "{{ sim_pod }}"
        command: ["bash","-lc","microdnf -y update {{ package }} || dnf -y update {{ package }} || true"]

    - name: Show {{ package }} version (after)
      kubernetes.core.k8s_exec:
        namespace: "{{ ns }}"
        pod: "{{ sim_pod }}"
        command: ["bash","-lc","rpm -q {{ package }} || true"]
      register: rpm_after

    - name: Print delta
      ansible.builtin.debug:
        msg: |
          Namespace: {{ ns }}
          Before: {{ rpm_before.stdout }}
          After : {{ rpm_after.stdout }}

    - name: Cleanup pod
      kubernetes.core.k8s:
        state: absent
        api_version: v1
        kind: Pod
        name: "{{ sim_pod }}"
        namespace: "{{ ns }}"
